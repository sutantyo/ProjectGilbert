extend layout
block content


	style(type='text/css').
		html,body,#taxi-anim {
			width: 100%;
			height: 100%;
			margin: 0;
			padding: 0 20px 0 30px;
		}
		.marker{
			position: absolute
		}

	.page-header
		h2 Roma taxi
			small &nbsp animation of crawdad data

	#taxi-anim
	script.

		// parameters to control the animation
		var frameLimit = 1000;
		var frame = 1;
		var framePause = 10;
		var startTime = new Date(2000,1,1,0,0,00,0);
		var endTime = new Date(2000,1,1,0,0,15,0);

		// container (and lookup table) for the data, i.e. GPS location of taxis
		var taxis = new Array();

		// create a map 
		var map = new google.maps.Map(d3.select("#taxi-anim").node(), {
			zoom: 13,
			center: new google.maps.LatLng(41.8975,12.4694),
			mapTypeId: google.maps.MapTypeId.ROADMAP
		});

		var padding = 0;




		taxiGPS.prototype = new google.maps.OverlayView();
		var taxiLayer = new taxiGPS();
		// bind the overlay to the map (thus calling overlay.onAdd)
		taxiLayer.setMap(map);
		// start the chain
		_updatePoints(taxiLayer);

		function _updatePoints(taxiLayer){
			d3.json('/taxi_roma/time?start=' + startTime.toTimeString().substr(0,2) + 'h' +
																									 startTime.toTimeString().substr(3,2) + 'm' +
																									 startTime.toTimeString().substr(6,2) + 's&end=' +
																									 endTime.toTimeString().substr(0,2) + 'h' + 
																									 endTime.toTimeString().substr(3,2) + 'm' + 
																									 endTime.toTimeString().substr(6,2) + 's', 
				function(error,data)
				{
					console.log('Frame: ' + frame + ' start time: ' + startTime);
					taxis.length = 0;
					data.forEach(function(datum){
						{
							console.log ('pushed taxi ' + datum.id + ' at ' + '(' + datum.x + ',' + datum.y + ')' );
							taxis.push({id: datum.id, x: datum.x, y: datum.y});
						}
					});

					taxiLayer.update();

					startTime.setSeconds(startTime.getSeconds()+15);
					endTime.setSeconds(endTime.getSeconds()+15);
					if (frame++ < frameLimit)
					{
						setTimeout(function(){_updatePoints(taxiLayer);},100);
					}
			}); // end d3.json


		};


		function taxiGPS(){

			var _projection;
			var _div;
			var x_padding = 12;
			var y_padding = -6;

			function transform(d) {
						d = new google.maps.LatLng(d.x, d.y);
						var position = _projection.fromLatLngToDivPixel(d);
						return d3.select(this)
						.transition()
						.style("left", position.x-x_padding + "px")
						.style("top", position.y+y_padding + "px");
			}

			this.onAdd = function() {
				_div = d3.select(this.getPanes().overlayLayer).append('div')
			};

			this.onRemove = function() {
				_div.remove();
			};

			this.update = function(){

				var markers = _div.selectAll('svg').data(taxis, function(d) {return d.id}).each(transform)
				var activeTaxis = markers.enter().append('svg')
					.attr('class','marker')
					.attr('id', function(d){ return 'taxi-animation-'+d.id});
				activeTaxis.append('rect')
					.attr({
							x: 0,
							y: 0,
							width: 24,
							height: 12,
							'fill': function(d){
									if (d.id == 37) 
										console.log ("Coord of taxi " + d.id + " is (" + d.x + ',' + d.y + ')');
									return 'rgb(' + ((d.id*89) % 256) + ',' + ((d.id*57) % 256) + ',' + ((d.id*17) % 256) + ')'
							}
					});
				activeTaxis.append('text')
					.attr({
						'x': function(d){ 
							if (d.id < 10) return 8;
							else if (d.id < 100) return 6;
							else return 3;
						},
						'y':5,
						'dy':'.45em',
						'fill':function(d){
								return getContrast50(d.id)
						}
					})
					.text(function(d){ return d.id })
				/*
				activeTaxis.append('text')
					.attr({
						'x':25,
						'y':5,
						'dy':'.45em',
						'fill':'black',
						'class':'coord'
					})
					.text(function(d){ return '(' + (d.x).substr(0,12) +','+(d.y).substr(0,12)+')' })
				*/


				markers.exit()
					.remove(function(d){console.log('Removed ' + d.id)});

				
				//_div.selectAll('.coord')
				//	.data(taxis).each(transformCoord);

			}; // end this.update


			this.draw = function() {
				_projection = this.getProjection();

					
			};

		}

		function getContrast50(id){
				var r = id*89%256;
				var g = id*57%256;
				var b = id*17%256; 
				var yiq = ((r*299)+(g*587)+(b*114))/1000;
				return (yiq >= 128) ? 'black' : 'white';
		}	

